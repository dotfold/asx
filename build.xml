<!--
    asx - Extensions for core ActionScript Objects
    https://github.com/drewbourne/asx
    
    Usage:    
        $ ant -v clean package
        
    Dependencies:
    - Ant 1.7+
    - Flex 3.5+ / 4.0+
   
   The goal of this build is compile the library SWC, generate ASDocs, and 
   bundle a binary distribution. 
-->
<project name="asx" basedir="." default="package">
    <property environment="env" />
    <property file="${basedir}/build/build.properties" />
    <property name="FLEX_HOME" location="${env.FLEX_HOME}" />

    <taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />
    <taskdef resource="flexUnitTasks.tasks" classpath="${build.loc}/flexUnitTasks-${flexunit.version}.jar" />
    
    <target name="clean">
        <delete dir="${target.loc}" />
    </target>
        
    <target name="initialize"
        depends="initialize-directories, initialize-properties, initialize-build-configuration, initialize-build-number, initialize-classes">
    </target>
        
    <target name="initialize-directories">
        <mkdir dir="${target.loc}" />
        <mkdir dir="${bin.loc}" />
        <mkdir dir="${doc.loc}" />
        <mkdir dir="${report.loc}" />
        <mkdir dir="${report.flexunit.loc}" />
    </target>
    
    <target name="initialize-properties">
        <property name="library.swc" value="${build.artifactId}-${build.version}.swc" />
        <property name="library.zip" value="${build.artifactId}-${build.version}.zip" />
    </target>
    
    <target name="initialize-build-configuration">
        
        <java jar="${FLEX_HOME}/lib/compc.jar" fork="true" failonerror="true" outputproperty="build.sdk.version">
            <arg line="-version" />
        </java>
        <condition property="build.isFlex4">
            <contains string="${build.sdk.version}" substring="Version 4." casesensitive="false" />
        </condition>
           
        <echo message="build.sdk.version: ${build.sdk.version}" />
    </target>
    
    <target name="initialize-build-number">
        <!-- Favour external build number, eg from Hudson -->
        <condition property="build.number" value="${env.BUILD_NUMBER}">
            <isset property="env.BUILD_NUMBER" />
        </condition>

        <!-- Otherwise use the local build.number -->
        <propertyfile file="${build.number.loc}" comment="${ant.project.name} build number">
            <entry key="build.number" default="0" value="1" type="int" operation="+" />
        </propertyfile>
        <property file="${build.number.loc}" />
    </target>
    
    <target name="initialize-classes">
        <!-- Create properties file from .flexLibProperties -->
        <xslt in="${library.loc}/.flexLibProperties" 
            out="${bin.loc}/flexLib.properties" 
            style="${build.loc}/flexLibProperties.xsl" />
        <!-- Pull in class file list for compc -->
        <property file="${bin.loc}/flexLib.properties" />
    </target>

    <target name="compile-dependencies">
        
        # ASX SpecRunner
        mxmlc specs/AsxSpecRunner.mxml \
         -output=bin/AsxSpecs.swf \
         -debug=true \
         -sp specs \
         -sp src \
         -sp ../spectacular-as3/src/ \
         -sp ../hamcrest-as3/hamcrest/src \


    </target>
    
    <target name="compile-spec">
    
    </target>    

    <target name="compile" 
        depends="initialize, compile.library">
    </target>
    
    <target name="compile.library.check-if-required">
        <uptodate property="compile.library.not-required"
            targetfile="${bin.loc}/${library.swc}">
            <srcfiles dir="${basedir}">
                <include name="${src.loc}/**/.as" />
                <include name="${src.loc}/**/.mxml" />
                <include name="${test.src.loc}/**/.as" />
                <include name="${test.src.loc}/**/.mxml" />
            </srcfiles>
        </uptodate>
    </target>
    
    <target name="compile.library" 
        depends="compile.library.check-if-required"
        unless="compile.library.not-required">
        <!--
        <compc output="${bin.loc}/${library.swc}"
            include-classes="${src.include-classes}">
            <load-config filename="${FLEX_HOME}/frameworks/flex-config.xml" />
            <load-config filename="${src.loc}/${library.config}" />
        </compc>
        -->
        <java jar="${FLEX_HOME}/lib/compc.jar" fork="true" failonerror="true">
          <jvmarg value="-Xmx512m" />
          <arg line="+flexlib '${FLEX_HOME}/frameworks'" />
          <arg line="-external-library-path+='${FLEX_HOME}/frameworks/libs/flex.swc'" />
          <arg line="-external-library-path+='${FLEX_HOME}/frameworks/libs/framework.swc'" />
          <arg line="-external-library-path+='${FLEX_HOME}/frameworks/libs/rpc.swc'" />
          <arg line="-external-library-path+='${FLEX_HOME}/frameworks/libs/utilities.swc'" />
          <arg line="-output=${bin.loc}/${library.swc}" />
          <arg line="-include-sources=${src.loc}" />
          <arg line="-source-path+=${src.loc}" />
          <arg line="-link-report=${bin.loc}/link-report.xml" />
          <arg line="-compiler.verbose-stacktraces=true" />
          <arg line="-compiler.headless-server=true" />
        </java>
    </target>
    
    <target name="test" 
        depends="compile, compile.test, test.execute, report">
    </target>
    
    <target name="compile.test.check-if-required">
        <uptodate property="compile.test.not-required" 
            targetfile="${bin.loc}/${test.swf}">
            <srcfiles dir="${basedir}">
                <include name="${src.loc}/**/.as" />
                <include name="${src.loc}/**/.mxml" />
                <include name="${test.src.loc}/**/.as" />
                <include name="${test.src.loc}/**/.mxml" />
            </srcfiles>
        </uptodate>
    </target>
    
    <target name="compile.test" 
        depends="compile.test.check-if-required"
        unless="compile.test.not-required">
        <mxmlc file="${test.src.loc}/${test.runner}"
            output="${bin.loc}/${test.swf}">
            <load-config filename="${FLEX_HOME}/frameworks/flex-config.xml" />
        </mxmlc>
    </target>
    
    <target name="test.execute">
        <flexunit 
            swf="${bin.loc}/${test.swf}" 
            toDir="${report.flexunit.loc}" 
            haltonfailure="false" 
            verbose="true" 
            localTrusted="true" />
    </target>
    
    <target name="report">
        <junitreport todir="${report.flexunit.loc}">
            <fileset dir="${report.flexunit.loc}">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${report.flexunit.loc}/html" />
        </junitreport>
    </target>

    <target name="docs" depends="initialize" if="build.isFlex4">
        <java jar="${FLEX_HOME}/lib/asdoc.jar" fork="true" failonerror="true">
            <arg line="+flexlib '${FLEX_HOME}/frameworks'" />
            <arg line="-doc-sources '${src.loc}'" />
            <arg line="-source-path+='${src.loc}'" />
            <arg line="-library-path+='${libs.loc}'" />
            <arg line="-output '${doc.loc}'" />
            <arg line="-main-title '${ant.project.name} Documentation'" />
            <arg line="-window-title '${ant.project.name} Documentation'" />
        </java>
    </target>
    
    <target name="package"
        depends="compile, test, docs">
        
        <zip destfile="${target.loc}/${library.zip}">
            <zipfileset dir="${doc.loc}" prefix="asx-${build.version}/docs" />
            <zipfileset dir="${bin.loc}" prefix="asx-${build.version}">
                <include name="*.swc" />
             </zipfileset>
        </zip>
        
    </target>

</project>